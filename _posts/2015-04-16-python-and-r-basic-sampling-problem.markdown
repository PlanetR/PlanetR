---
title: "Python and R: Basic Sampling Problem"
kind: article
created_at: 2015-04-16 06:02:00 UTC
author: Alstatr
categories: 
tags: 
layout: post
---
<div dir="ltr" style="text-align: left;" trbidi="on">In this post, I would like to share a simple problem about sampling analysis. And I will demonstrate how to solve this using Python and R. The first two problems are originally from Sampling: Design and Analysis book by Sharon Lohr.<br/><br/><h3>Problems</h3><ol><li>Let $N=6$ and $n=3$. For purposes of studying sampling distributions, assume that all population values are known. <br/><br/><center><table width = 50%><tr><td>$y_1 = 98$</td><td>$y_2 = 102$</td><td>$y_3=154$</td></tr><tr><td>$y_4 = 133$</td><td>$y_5 = 190$</td><td>$y_6=175$</td></tr></table></center><br/>We are interested in $\bar{y}_U$, the population mean. Consider eight possible samples chosen. <br/><br/><center><table width = 40%><tr><td>Sample No.</td><td>Sample, $\mathcal{S}$</td><td>$P(\mathcal{S})$</td><tr><tr><td align = "center">1</td><td>$\{1,3,5\}$</td><td>$1/8$</td></tr><tr><td align = "center">2</td><td>$\{1,3,6\}$</td><td>$1/8$</td></tr><tr><td align = "center">3</td><td>$\{1,4,5\}$</td><td>$1/8$</td></tr><tr><td align = "center">4</td><td>$\{1,4,6\}$</td><td>$1/8$</td></tr><tr><td align = "center">5</td><td>$\{2,3,5\}$</td><td>$1/8$</td></tr><tr><td align = "center">6</td><td>$\{2,3,6\}$</td><td>$1/8$</td></tr><tr><td align = "center">7</td><td>$\{2,4,5\}$</td><td>$1/8$</td></tr><tr><td align = "center">8</td><td>$\{2,4,6\}$</td><td>$1/8$</td></tr></table></center><br/><a name='more'></a><ol type = "a"><li>What is the value of $\bar{y}_U$?</li><li>Let $\bar{y}$ be the mean of the sample values. For each sampling plan, find <ol type = "i"><li>$\mathrm{E}\bar{y}$;</li><li>$\mathrm{Var}\bar{y}$;</li><li>$\mathrm{Bias}(\bar{y})$;</li><li>$\mathrm{MSE}(\bar{y})$;</li></ol></li></ol></li><li>Mayr et al. (1994) took an SRS of 240 children who visisted their pediatric outpatient clinic. They found the following frequency distribution for the age (in months) of free (unassisted) walking among the children:<br/><br/><center><table width = 85%><tr><td align = "right">Age (months)</td><td align = "right">9</td><td align = "right">10</td><td align = "right">11</td><td align = "right">12</td><td align = "right">13</td><td align = "right">14</td><td align = "right">15</td><td align = "right">16</td><td align = "right">17</td><td align = "right">18</td><td align = "right">19</td><td align = "right">20</tr><tr><td align = "right">Number of Children</td><td align = "right">13</td><td align = "right">35</td><td align = "right">44</td><td align = "right">69</td><td align = "right">36</td><td align = "right">24</td><td align = "right">7</td><td align = "right">3</td><td align = "right">2</td><td align = "right">5</td><td align = "right">1</td><td align = "right">1</tr></table></center><br/>Find the mean and SE of the age for onset of free walking. </li><li>Table 1 gives the cultivated area in acres in 1981 for 40 villages in a region. (Theory and Method of Survey) Using the arrangement (random) of data in the table, draw systematic sample of size 8.  Use r ((random start) = 2,<br/><br/><center><table width = 80%><tr><td align = "right">Village</td><td align = "right">$Y_j$</td><td align = "right">Village</td><td align = "right">$Y_j$</td><td align = "right">Village</td><td align = "right">$Y_j$</td><td align = "right">Village</td><td align = "right">$Y_j$</tr><tr><td align = "right">1</td><td align = "right">105</td><td align = "right">11</td><td align = "right">319</td><td align = "right">21</td><td align = "right">70</td><td align = "right">31</td><td align = "right">16</tr><tr><td align = "right">2</td><td align = "right">625</td><td align = "right">12</td><td align = "right">72</td><td align = "right">22</td><td align = "right">249</td><td align = "right">32</td><td align = "right">439</tr><tr><td align = "right">3</td><td align = "right">47</td><td align = "right">13</td><td align = "right">109</td><td align = "right">23</td><td align = "right">384</td><td align = "right">33</td><td align = "right">123</td></tr><tr><td align = "right">4</td><td align = "right">312</td><td align = "right">14</td><td align = "right">91</td><td align = "right">24</td><td align = "right">482</td><td align = "right">34</td><td align = "right">207</tr><tr><td align = "right">5</td><td align = "right">327</td><td align = "right">15</td><td align = "right">152</td><td align = "right">25</td><td align = "right">378</td><td align = "right">35</td><td align = "right">145</td></tr><tr><td align = "right">6</td><td align = "right">230</td><td align = "right">16</td><td align = "right">189</td><td align = "right">26</td><td align = "right">111</td><td align = "right">36</td><td align = "right">666</td></tr><tr><td align = "right">7</td><td align = "right">240</td><td align = "right">17</td><td align = "right">365</td><td align = "right">27</td><td align = "right">534</td><td align = "right">37</td><td align = "right">338</td></tr><tr><td align = "right">8</td><td align = "right">203</td><td align = "right">18</td><td align = "right">70</td><td align = "right">28</td><td align = "right">306</td><td align = "right">38</td><td align = "right">624</td></tr><tr><td align = "right">9</td><td align = "right">535</td><td align = "right">9</td><td align = "right">249</td><td align = "right">29</td><td align = "right">655</td><td align = "right">39</td><td align = "right">501</tr><tr><td align = "right">10</td><td align = "right">275</td><td align = "right">20</td><td align = "right">384</td><td align = "right">30</td><td align = "right">102</td><td align = "right">40</td><td align = "right">962</td></tr></table></center></li></ol><h3>Solutions</h3>In order to appreciate the codes, I will share some theoretical part of the solution. But our main focus here is to solve this problem computationally using Python and R. <ol><li><ol type = "a"><li>The value of $\bar{y}_U$ is coded as follows:<br/><br/>Python Code <script src="https://gist.github.com/alstat/d98cc60fdb46270f7311.js"></script>R Code <script src="https://gist.github.com/alstat/9afce899f14128ea12d0.js"></script></li><li>To obtain the sample using the sample index given in the table in the above question, we do a combination of population index of three elements, ${6\choose 3}$, first. Where the first two combinations are the samples, $\{1,2,3\}$ and $\{1,2,4\}$, and so on. Then from this list of all possible combinations of three elements, we draw those that are listed in the above table as our samples, with first sample index $\{1,3,5\}$, having population units, $\{98, 154, 190\}$. So that the following is the code of this sampling design:<br/><br/>Python Code <script src="https://gist.github.com/alstat/bca1e32f6ab9c7e2a6f2.js"></script>R Code <script src="https://gist.github.com/alstat/9b67c3e8444c6fcc620c.js"></script><ol type = "i"><li>Now to obtain the expected value of the average of the sample data, we compute it using $\mathrm{E}\bar{y}=\sum_{k}\bar{y}_k\mathrm{P}(\bar{y}_k)=\sum_{k}\bar{y_k}\mathrm{P}(\mathcal{S}_k)$, $\forall k\in\{1,\cdots,8\}$. So for $k = 1$,  $$ \begin{aligned} \bar{y}_1\mathrm{P}(\mathcal{S}_1)&=\frac{98+154+190}{3}\mathrm{P}(\mathcal{S}_1)\\ &=\frac{98+154+190}{3}\left(\frac{1}{8}\right)=18.41667. \end{aligned} $$  Applying this to the remaining $n-1$ $k$s, and summing up the terms gives us the answer to $\mathrm{E}\bar{y}$. So that the following is the equivalent of this:<br/><br/>Python Code <script src="https://gist.github.com/alstat/ef0892e9be3024231b3a.js"></script>R Code <script src="https://gist.github.com/alstat/3e5813edd196ab931014.js"></script>From the above code, the output tells us that $\mathrm{E}\bar{y}=140$. </li><li>Next is to compute for the variance of $\bar{y}$, which is $\mathrm{Var}\bar{y}=\mathrm{E}\bar{y}^{2}-(\mathrm{E}\bar{y})^2$. So we need a function for $\mathrm{E}\bar{y}^2$, where the first term of this, $k=1$, is $\bar{y}_1^2\mathrm{P}(\mathcal{S}_1)=\left(\frac{98+154+190}{3}\right)^2\mathrm{P}(\mathcal{S}_1)=\left(\frac{98+154+190}{3}\right)^2(\frac{1}{8})=2713.3889$. Applying this to other terms and summing them up, we have following code:<br/><br/>Python Code <script src="https://gist.github.com/alstat/965349d8ec12455a96c6.js"></script>R Code <script src="https://gist.github.com/alstat/9594aaf87ad6dfe4fde4.js"></script>So that using the above output, 20182.94, and subtracting $(\mathrm{E}\bar{y})^2$ to it, will give us the variance. And hence the succeeding code:<br/><br/>Python Code: <script src="https://gist.github.com/alstat/c213a63513ba21774ec3.js"></script>R Code: <script src="https://gist.github.com/alstat/390b6ba65650532f96de.js"></script>So the variance of the $\bar{y}$ is $18.9444$. </li></ol></li><li>The $\mathrm{Bias}$ is just the difference between the estimate and the true value. And since the estimate is unbiased ($\mathrm{E}\bar{y}=142$), so $\mathrm{Bias}=142-142=0$. </li><li>$\mathrm{MSE}=\mathrm{Var}\bar{y}-(\mathrm{Bias}\bar{y})^2$, and since the $\mathrm{Bias}\bar{y}=0$. So $\mathrm{MSE}=\mathrm{Var}\bar{y}$. </li></ol></li><li>First we need to obtain the probability of each Age, that is by dividing the Number of Children with the total sum of it. That is why, we have <code>p_s</code> function defined below. After obtaining the probabilities, we can then compute the expected value using the <code>expectation</code> function we defined earlier.<br/><br/>Python Code <script src="https://gist.github.com/alstat/7c1c0090a03c389fd935.js"></script>R Code <script src="https://gist.github.com/alstat/b4eb9a7692ed163538d6.js"></script> It should be clear in the data that the average age is about 12 months old, where the plot of it is shown below,  <iframe src="http://cdn.rawgit.com/alstat/Analysis-with-Programming/master/2015/Python/Sampling-Design/samp1.html" seamless height="515px" width="100%", frameborder = 0></iframe> For the code of the above plot please click <a href="https://gist.github.com/alstat/594c7074890f4dc8b4d1" target = "_blank">here</a>. Next is to compute the standard error which is just the square root of the variance of the sample,<br/><br/>Python Code <script src="https://gist.github.com/alstat/34b12a892e8cb311c9e5.js"></script>R Code <script src="https://gist.github.com/alstat/26d69c90d12d68bdd7f8.js"></script>So the standard variability of the Age is 1.920824. </li><li>Let me give you a brief discussion on the systematic sampling to help you understand the code. The idea in systematic sampling is that, given the population units numbered from 1 to $N$, we compute for the sampling interval, given by $k = \frac{N}{n}$, where $n$ is the number of units needed for the sample. After that, we choose for the random start, number between $1$ and $k$. This random start will be the first sample, and then the second unit in the sample is obtained by adding the sampling interval to the random start, and so on. There are two types of systematic sampling namely, Linear and Circular Systematic Samplings. Circular systematic sampling treats the population units numbered from $1$ to $N$ in circular form, so that if the increment step is more than the number of $N$ units, say $N+2$, the sample unit is the $2^{nd}$ element in the population,  and so on. The code that I will be sharing can be used both for linear and circular, but for this particular problem only. Since there are rules in linear that are not satisfied in the function, one of which is if $k$ is not a whole number, despite that, however, you can always extend it to a more general function.<br/><br/>Python Code <script src="https://gist.github.com/alstat/06e459265e7c1dfa9b17.js"></script>R Code <script src="https://gist.github.com/alstat/77674937787928723e02.js"></script>You may notice in the output above, that the index returned in Python is not the same with the index returned in R. This is because Python index starts with 0, while that in R starts with 1. So that's why we have the same population units sampled between the two language despite the differences between the index returned. </li></ol><h3>Reference</h3><ol><li><a href="http://www.amazon.com/Sampling-Design-Analysis-Advanced-Series/dp/0495105279" target="_blank">Lohr, Sharon (2009). <i>Sampling: Design and Analysis</i>. Cengage Learning.</a>  </li></ol></div><div class="author">
  <img src="" style="width: 96px; height: 96;">
  <span style="position: absolute; padding: 32px 15px;">
    <i>Original post by <a href="http://twitter.com/">Alstatr</a> - check out <a href="http://alstatr.blogspot.com/">Analysis with Programming</a></i>
  </span>
</div>
