---
title: "Using R to Analyze Baseball Games in “Real Time”"
kind: article
created_at: 2009-10-04 22:54:49 UTC
author: Blogistic Reflections
categories: 
tags: 
layout: post
---
<p>
In order to honor the last day of the 2009 MLB regular season (excepting the Twins/Tigers tiebreaker Tuesday night), I was reading a book that combines a few of my favorite thing: statistics, R, and baseball.  The book, by <a href="http://www.oreillynet.com/pub/au/2033">Joseph Adler</a>, is called <a href="http://oreilly.com/catalog/9780596009427">Baseball Hacks</a>, and I highly recommend it if you are interested in analyzing baseball data.  Joseph uses Excel for some tips, R for others, and shows you how to download historical and current baseball data for further analysis. One tip that the book offered was a way to download &#8220;real time&#8221; baseball data from <a href="http://mlb.mlb.com/index.jsp">MLB&#8217;s site</a> in XML format.  I decided to try to write some R functions to retrieve, summarize, and analyze what was available.
</p>
<div id="outline-container-1.1" class="outline-3">
<h3 id="sec-1.1">Where are the data? </h3>
<div id="text-1.1">
<p>
Joseph shows how, at least at the time of the writing of his book and this post, you can go <a href="http://gd2.mlb.com/components/game/mlb/">here</a> to download a wealth of XML data from past and current seasons.  If you drill down far enough into the directories, you can find a file called miniscoreboard.xml, which is the one I use for this analysis.
</p>
</div>
</div>
<div id="outline-container-1.2" class="outline-3">
<h3 id="sec-1.2">The R functions </h3>
<div id="text-1.2">
<p>
Here are the R functions I wrote.  You can copy and paste them into your R session so that they are available to you.  The next section will describe how to use them. Writing these was fairly straightforward, and simply a matter of XML manipulation.  I admit that there may be far better ways to do this manipulation using the XML package, but this worked for now.
</p>
<pre style="background-color:#FFFFE5;font-size:8pt;overflow:auto;" class="src src-R">
<span style="color:#0a0;">################################################################################</span><span style="color:#0a0;font-style:italic;">
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">Program Name:     xml-mlb-gameday.R
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">Author:           Erik
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">Created:          10/04/2009
</span><span style="color:#0a0;">#</span><span style="color:#0a0;font-style:italic;">
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">Last saved
</span><span style="color:#0a0;">#    </span><span style="color:#0a0;font-style:italic;">Time-stamp:      &lt;2009-10-04 17:23:02 erik&gt;
</span><span style="color:#0a0;">#</span><span style="color:#0a0;font-style:italic;">
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">Purpose:          show current scoreboard in R 
</span><span style="color:#0a0;">#</span><span style="color:#0a0;font-style:italic;">
</span><span style="color:#0a0;">#   </span><span style="color:#0a0;font-style:italic;">** Generated by auto-insert on 10/04/2009 at 13:25:58**
</span><span style="color:#0a0;">################################################################################</span><span style="color:#0a0;font-style:italic;">
</span>
<span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">need XML package, may need to install w/ install.packages()
</span><span style="color:#5f9ea0;">library</span>(XML)

<span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">create a boxscore object from an XML description of a game 
</span><span style="color:#0000ff;font-weight:bold;">createBoxScore</span> <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#a020f0;font-weight:bold;">function</span>(x) {
  status <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#a020f0;font-weight:bold;">if</span>(x$.attrs[<span style="color:#b22222;">"status"</span>] != <span style="color:#b22222;">"In Progress"</span>)
    <span style="color:#b22222;">"Final"</span> <span style="color:#a020f0;font-weight:bold;">else</span> <span style="color:#a020f0;font-weight:bold;">if</span>(x$.attrs[<span style="color:#b22222;">"top_inning"</span>] == <span style="color:#b22222;">"Y"</span>)
      <span style="color:#b22222;">"Top"</span> <span style="color:#a020f0;font-weight:bold;">else</span> <span style="color:#b22222;">"Bot"</span>
  
  bs <span style="color:#5f9ea0;">&lt;-</span> list(status = status, 
             inning = as.numeric(x$.attrs[<span style="color:#b22222;">"inning"</span>]),
             away.team = x$.attrs[<span style="color:#b22222;">"away_name_abbrev"</span>],
             away.runs = as.numeric(x$.attrs[<span style="color:#b22222;">"away_team_runs"</span>]),
             away.hits = as.numeric(x$.attrs[<span style="color:#b22222;">"away_team_hits"</span>]), 
             away.errors = as.numeric(x$.attrs[<span style="color:#b22222;">"away_team_errors"</span>]),
             home.team = x$.attrs[<span style="color:#b22222;">"home_name_abbrev"</span>],
             home.runs = as.numeric(x$.attrs[<span style="color:#b22222;">"home_team_runs"</span>]), 
             home.hits = as.numeric(x$.attrs[<span style="color:#b22222;">"home_team_hits"</span>]), 
             home.errors = as.numeric(x$.attrs[<span style="color:#b22222;">"home_team_errors"</span>]))
  class(bs) <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#b22222;">"boxscore"</span>
  bs
}

<span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">print the boxscore object in traditional format
</span><span style="color:#0000ff;font-weight:bold;">print.boxscore</span> <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#a020f0;font-weight:bold;">function</span>(x, ...) {
  cat(<span style="color:#b22222;">"     "</span>, <span style="color:#b22222;">"R   "</span>, <span style="color:#b22222;">"H  "</span>, <span style="color:#b22222;">"E ("</span>,
      x$status, <span style="color:#b22222;">" "</span>,
      x$inning, <span style="color:#b22222;">")\n"</span>,
      format(x$away.team, width = 3), <span style="color:#b22222;">" "</span>, 
      format(x$away.runs, width = 2), <span style="color:#b22222;">"  "</span>, 
      format(x$away.hits, width = 2), <span style="color:#b22222;">"  "</span>, 
      x$away.errors, <span style="color:#b22222;">"\n"</span>,
      format(x$home.team, width = 3), <span style="color:#b22222;">" "</span>, 
      format(x$home.runs, width = 2), <span style="color:#b22222;">"  "</span>, 
      format(x$home.hits, width = 2), <span style="color:#b22222;">"  "</span>, 
      x$home.errors, <span style="color:#b22222;">"\n\n"</span>, sep = <span style="color:#b22222;">""</span>)
}

<span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">utility function ... 
</span><span style="color:#0000ff;font-weight:bold;">as.data.frame.boxscore</span> <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#a020f0;font-weight:bold;">function</span>(x, row.names, optional, ...) {
  class(x) <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#b22222;">"list"</span>
  as.data.frame(x)
}

<span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">This is the "user accessible" public function you should be calling!
</span><span style="color:#0a0;">## </span><span style="color:#0a0;font-style:italic;">downloads the XML data, and prints out boxscores for games on "date"
</span><span style="color:#0000ff;font-weight:bold;">boxscore</span> <span style="color:#5f9ea0;">&lt;-</span> <span style="color:#a020f0;font-weight:bold;">function</span>(date = Sys.Date()) {
  <span style="color:#a020f0;font-weight:bold;">if</span>(date &gt; Sys.Date())
    <span style="color:#a020f0;font-weight:bold;">stop</span>(<span style="color:#b22222;">"Cannot retrieve scores from the future."</span>)
         
  year  <span style="color:#5f9ea0;">&lt;-</span> paste(<span style="color:#b22222;">"year_"</span>, format(date, <span style="color:#b22222;">"%Y"</span>), <span style="color:#b22222;">"/"</span>, sep = <span style="color:#b22222;">""</span>)
  month <span style="color:#5f9ea0;">&lt;-</span> paste(<span style="color:#b22222;">"month_"</span>, format(date, <span style="color:#b22222;">"%m"</span>), <span style="color:#b22222;">"/"</span>, sep = <span style="color:#b22222;">""</span>)
  day   <span style="color:#5f9ea0;">&lt;-</span> paste(<span style="color:#b22222;">"day_"</span>, format(date, <span style="color:#b22222;">"%d"</span>), <span style="color:#b22222;">"/"</span>, sep = <span style="color:#b22222;">""</span>)
         
  xmlFile <span style="color:#5f9ea0;">&lt;-</span>
    paste(<span style="color:#b22222;">"http://gd2.mlb.com/components/game/mlb/"</span>,
          year, month, day, <span style="color:#b22222;">"miniscoreboard.xml"</span>, sep = <span style="color:#b22222;">""</span>)
  xmlTree <span style="color:#5f9ea0;">&lt;-</span> xmlTreeParse(xmlFile, useInternalNodes = <span style="color:#0a6;">TRUE</span>)
  xp <span style="color:#5f9ea0;">&lt;-</span> xpathApply(xmlTree, <span style="color:#b22222;">"//game"</span>)
  xmlList <span style="color:#5f9ea0;">&lt;-</span> lapply(xp, xmlToList)

  bs.list <span style="color:#5f9ea0;">&lt;-</span> lapply(xmlList, createBoxScore)
  names(bs.list) <span style="color:#5f9ea0;">&lt;-</span>
    paste(sapply(bs.list, <span style="color:#b22222;">"[["</span>, <span style="color:#b22222;">"away.team"</span>),
                 <span style="color:#b22222;">"@"</span>,
          sapply(bs.list, <span style="color:#b22222;">"[["</span>, <span style="color:#b22222;">"home.team"</span>))
  bs.list
}



















</pre>
</div>
</div>
<div id="outline-container-1.3" class="outline-3">
<h3 id="sec-1.3">Examples of summarizing real-time baseball data </h3>
<div id="text-1.3">
<p>
Here is how to run some simple analyses on baseball games happening right now. This is the real value add for the idea of downloading data through R.  Obviously you could just go to your favorite sports site to find scores if you wanted to know how your team was doing, but pulling the data into R lets you further analyze the data, and even combine it with other data sources (e.g., weather).
</p>
<pre style="background-color:#FFFFE5;font-size:8pt;overflow:auto;" class="src src-R-transcript">


<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## print boxscores for games happening NOW!
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> boxscore()
$<span style="color:#b22222;">`CWS @ DET`</span>
     R   H  E (Final 9)
CWS  3   7  0
DET  5  12  0


$<span style="color:#b22222;">`HOU @ NYM`</span>
     R   H  E (Final 9)
HOU  0   4  1
NYM  4   9  0


$<span style="color:#b22222;">`PIT @ CIN`</span>
     R   H  E (Final 9)
PIT  0  10  0
CIN  6  11  0


$<span style="color:#b22222;">`WSH @ ATL`</span>
     R   H  E (Final 15)
WSH  2  13  0
ATL  1  13  0


$<span style="color:#b22222;">`CLE @ BOS`</span>
     R   H  E (Final 9)
CLE  7   8  0
BOS 12  11  0


$<span style="color:#b22222;">`FLA @ PHI`</span>
     R   H  E (Final 10)
FLA  6  11  1
PHI  7  12  0


$<span style="color:#b22222;">`TOR @ BAL`</span>
     R   H  E (Final 11)
TOR  4   9  2
BAL  5   8  0


$<span style="color:#b22222;">`NYY @ TB`</span>
     R   H  E (Final 9)
NYY 10  12  0
TB   2   7  2


$<span style="color:#b22222;">`KC @ MIN`</span>
     R   H  E (Final 9)
KC   4  12  0
MIN 13  11  0


$<span style="color:#b22222;">`MIL @ STL`</span>
     R   H  E (Final 10)
MIL  9  15  2
STL  7   7  0


$<span style="color:#b22222;">`ARI @ CHC`</span>
     R   H  E (Final 9)
ARI  5   8  0
CHC  2   6  0


$<span style="color:#b22222;">`LAA @ OAK`</span>
     R   H  E (Final 9)
LAA  5   9  1
OAK  3  12  1


$<span style="color:#b22222;">`SF @ SD`</span>
     R   H  E (Bot 9)
SF   3  11  1
SD   3   4  0


$<span style="color:#b22222;">`COL @ LAD`</span>
     R   H  E (Top 8 )
COL  1   4  1
LAD  5  12  0


$<span style="color:#b22222;">`TEX @ SEA`</span>
     R   H  E (Final 9)
TEX  3   4  0
SEA  4   8  1 
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## print boxscores for a different day's games
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> boxscore(date = as.Date(<span style="color:#b22222;">"2009-10-01"</span>))
$<span style="color:#b22222;">`STL @ CIN`</span>
     R   H  E (Final 9)
STL 13  15  1
CIN  0   5  0


$<span style="color:#b22222;">`MIN @ DET`</span>
     R   H  E (Final 9)
MIN  8  13  4
DET  3   7  1


$<span style="color:#b22222;">`MIL @ COL`</span>
     R   H  E (Final 9)
MIL  2   6  0
COL  9  14  1


$<span style="color:#b22222;">`ARI @ SF`</span>
     R   H  E (Final 9)
ARI  3   6  1
SF   7  11  0


$<span style="color:#b22222;">`TEX @ LAA`</span>
     R   H  E (Final 9)
TEX 11  15  1
LAA  3   7  2


$<span style="color:#b22222;">`WSH @ ATL`</span>
     R   H  E (Final 9)
WSH  2   7  0
ATL  1   6  0


$<span style="color:#b22222;">`HOU @ PHI`</span>
     R   H  E (Final 9)
HOU  5  10  0
PHI  3  13  1


$<span style="color:#b22222;">`BAL @ TB`</span>
     R   H  E (Final 9)
BAL  3   7  0
TB   2   5  1


$<span style="color:#b22222;">`CLE @ BOS`</span>
     R   H  E (Final 9)
CLE  0   3  0
BOS  3  12  0


$<span style="color:#b22222;">`PIT @ CHC`</span>
     R   H  E (Final <span style="color:#0a6;">NA</span>)
PIT <span style="color:#0a6;">NA</span>  <span style="color:#0a6;">NA</span>  <span style="color:#0a6;">NA</span>
CHC <span style="color:#0a6;">NA</span>  <span style="color:#0a6;">NA</span>  <span style="color:#0a6;">NA</span>


$<span style="color:#b22222;">`OAK @ SEA`</span>
     R   H  E (Final 9)
OAK  2   7  1
SEA  4   8  0 
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## save the boxscores for futher analysis
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> bs <span style="color:#5f9ea0;">&lt;-</span> boxscore()
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## convert to a more useful form, a data.frame
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## with one game per row 
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> bs.df <span style="color:#5f9ea0;">&lt;-</span> do.call(rbind, lapply(bs, as.data.frame))
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## status of today's games
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> table(bs.df$status)
Final   Bot   Top 
   13     1     1  
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## how many innings have been played today? 
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> sum(bs.df$inning, na.rm = <span style="color:#0a6;">TRUE</span>)
<span style="color:#5f9ea0;">[1]</span> 144 
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## how many runs have been scored by the home teams today?
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> sum(bs.df$home.runs, na.rm = <span style="color:#0a6;">TRUE</span>)
<span style="color:#5f9ea0;">[1]</span> 79 
<span style="color:#a020f0;font-weight:bold;">&gt;</span> <span style="color:#0a0;font-style:italic;">## how many runs have been scored by the away teams today?
</span><span style="color:#a020f0;font-weight:bold;">&gt;</span> sum(bs.df$away.runs, na.rm = <span style="color:#0a6;">TRUE</span>)
<span style="color:#5f9ea0;">[1]</span> 62 

</pre>
</div>
</div>
<div id="outline-container-1.4" class="outline-3">
<h3 id="sec-1.4">Conclusion </h3>
<div id="text-1.4">
<p>
These functions are far from robust, and I think they only work for the current year (i.e., 2009, dates from 2008 were not working right). The format looks like it has changed over time, which is not surprising.  I only use a very small subset of the available data, even the miniscoreboard.xml file contains far more information than I summarize here. This is really the first time I have dealt with XML data, so I am sure there is a lot more that can be done, but for a one-day project, I think the results are pretty interesting. I will definitely provide the updates I make to these functions, and may even start a baseball R package if they grow extensive enough. I suppose this is a project I can work on in the off season!
</p>
</div>
</div><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/blogisticreflections.wordpress.com/128/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/blogisticreflections.wordpress.com/128/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=blogisticreflections.wordpress.com&#038;blog=9541286&#038;post=128&#038;subd=blogisticreflections&#038;ref=&#038;feed=1" width="1" height="1" /><div class="author">
  <img src="" style="width: 96px; height: 96;">
  <span style="position: absolute; padding: 32px 15px;">
    <i>Original post by <a href="http://twitter.com/">Blogistic Reflections</a> - check out <a href="https://blogisticreflections.wordpress.com">Blogistic Reflections</a></i>
  </span>
</div>
