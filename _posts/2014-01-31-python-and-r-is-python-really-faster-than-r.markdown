---
title: "Python and R: Is Python really faster than R?"
kind: article
created_at: 2014-01-31 02:22:00 UTC
author: Alstatr
categories: 
tags: 
layout: post
---
<div dir="ltr" style="text-align: left;" trbidi="on">A friend of mine asked me to code the following in R:<br /><ol style="text-align: left;"><li>Generate samples of size 10 from Normal distribution with $\mu$ = 3 and $\sigma^2$ = 5;</li><li>Compute the $\bar{x}$ and $\bar{x}\mp z_{\alpha/2}\displaystyle\frac{\sigma}{\sqrt{n}}$ using the 95% confidence level;</li><li>Repeat the process 100 times; then</li><li>Compute the percentage of the confidence intervals containing the true mean.</li></ol>&nbsp;So here is what I got,<br /><br /><script src="https://gist.github.com/alstat/8725206.js"></script>Staying with the default values, one would obtain <br /><br /><script src="https://gist.github.com/alstat/8725240.js"></script>The output is a list of <code>Matrix</code> and <code>Decision</code>, wherein the first column of the first list (<code>Matrix</code>) is the computed $\bar{x}$; the second and third columns are the lower and upper limits of the confidence interval, respectively; and the fourth column, is an array of ones -- if true mean is contained in the interval and zeros -- true mean not contained. <br /><br />Now how fast it would be if I were to code this in Python?<br /><a name='more'></a><br />I do have a prior knowledge that Python beats R in terms of speed (confirmed from Nathan's <a href="http://climateecology.wordpress.com/2013/08/19/r-vs-python-speed-comparison-for-bootstrapping/" target="_blank">post</a>), but out of curiosity I wasn't satisfied with that fact; and leads me to the following Python equivalent,<br /><br /><script src="https://gist.github.com/alstat/8725353.js"></script>Computing the elapsed time, we have <br /><ul><li><b>R</b><br /><script src="https://gist.github.com/alstat/8725385.js"></script></li><li><b>Python</b><br /><script src="https://gist.github.com/alstat/8725398.js"></script></li></ul>As you can see, R executes at 0.008 seconds while Python runs at 0.089 seconds. I am surprised by this fact! I mean, what is happening with my Python? Firing up to 100000 repetitions,<br /><br /><script src="https://gist.github.com/alstat/8725422.js"></script>and Python,<br /><br /><script src="https://gist.github.com/alstat/8725446.js"></script>Gets even worst! 64 seconds over 7 seconds? That's a huge difference. I don't know what is happening here, but I did my best to literally translate the R codes to Python, and yet R?<br /><br />Any thoughts guys, especially to the Python gurus?<br /><br /><h3 style="text-align: left;">UPDATE: </h3><div style="text-align: left;">I just want to include some great suggestions from the comments below. From&nbsp;Chad Fulton, the above python code can be optimized into the following:<br /><br /><script src="https://gist.github.com/alstat/8748774.js"></script>Translated to the proceeding R code by Willem Ligtenberg<br /><br /><script src="https://gist.github.com/alstat/8748843.js"></script>And another version by wiekvoet using data frame,<br /><br /><script src="https://gist.github.com/alstat/8748913.js"></script>Taking the elapsed time, we have <br /><br /><script src="https://gist.github.com/alstat/8748961.js"></script>And in R, <br /><br /><script src="https://gist.github.com/alstat/8748985.js"></script>Python :D </div><div style="text-align: left;"><br /></div></div><div class="author">
  <img src="" style="width: 96px; height: 96;">
  <span style="position: absolute; padding: 32px 15px;">
    <i>Original post by <a href="http://twitter.com/">Alstatr</a> - check out <a href="http://alstatr.blogspot.com/">Analysis with Programming</a></i>
  </span>
</div>
