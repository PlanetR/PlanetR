---
title: "SASÂ®: Getting Started with PROC IML"
kind: article
created_at: 2015-04-25 07:29:00 UTC
author: Alstatr
categories: 
tags: 
layout: post
---
Another powerful procedure of SAS, my favorite one, that I would like to share is the PROC IML (Interactive Matrix Language). This procedure treats all objects as a matrix, and is very useful for doing scientific computations involving vectors and matrices. To get started, we are going to demonstrate and discuss the following: <ul><li>Creating and Shaping Matrices;</li><li>Matrix Query;</li><li>Subscripts;</li><li>Descriptive Statistics;</li><li>Set Operations;</li><li>Probability Functions and Subroutine;</li><li>Linear Algebra;</li><li>Reading and Creating Data;</li></ul>Above outline is based on the IML tip sheet (see Reference 1). So to begin on the first bullet, consider the following code: <a name='more'></a><br/><br/><script src="https://gist.github.com/alstat/2497c8d1404f99c11d21.js"></script><center><div id="div_659b59db-692c-4d47-b4ee-f8af267a4eaf" class="c body"><section data-name="IML" data-sec-type="proc"><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">scalar</th></tr></thead><tbody><tr><td class="r data">5</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="6" scope="colgroup">row_vec</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">2</td><td class="r data">3</td><td class="r data">4</td><td class="r data">5</td><td class="r data">6</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">col_vec</th></tr></thead><tbody><tr><td class="r data">1</td></tr><tr><td class="r data">2</td></tr><tr><td class="r data">3</td></tr><tr><td class="r data">4</td></tr><tr><td class="r data">5</td></tr><tr><td class="r data">6</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">num_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">2</td><td class="r data">3</td></tr><tr><td class="r data">4</td><td class="r data">5</td><td class="r data">6</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">chr_mat</th></tr></thead><tbody><tr><td class="data">Hello,</td></tr><tr><td class="data">world! :D</td></tr></tbody></table></article><article id="IDX5"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="6" scope="colgroup">i_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">1</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">1</td></tr></tbody></table></article><article id="IDX6"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">mat_2</th></tr></thead><tbody><tr><td class="r data">2</td></tr><tr><td class="r data">2</td></tr><tr><td class="r data">2</td></tr></tbody></table></article><article id="IDX7"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">trow_vec</th></tr></thead><tbody><tr><td class="r data">1</td></tr><tr><td class="r data">2</td></tr><tr><td class="r data">3</td></tr><tr><td class="r data">4</td></tr><tr><td class="r data">5</td></tr><tr><td class="r data">6</td></tr></tbody></table></article><article id="IDX8"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">mat1</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">2</td></tr><tr><td class="r data">3</td><td class="r data">4</td></tr><tr><td class="r data">5</td><td class="r data">6</td></tr></tbody></table></article></section></div></center> With the help of the comments in the code, it wouldn't be difficult to comprehend what each line tries to tell us, so I will only explain line 33. In SAS, variables defined are not automatically stored into the workspace unless one stores it first, and then call it on other procedures by loading the storage, which we'll see on the next entry -- Math Query. Functions we'll discuss in math query involve extracting number of columns, rows, and so on, below is the sample code of this,<br/><br/><script src="https://gist.github.com/alstat/544f32b4555ea6ea5851.js"></script><center><div id="div_7bace06f-a0ca-4a3c-b6e0-8760c483c5ce" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><pre class="batch" style="border-spacing: 1px; width:500px"> SYMBOL     ROWS   COLS TYPE   SIZE                     <br /> ------   ------ ------ ---- ------                     <br /> CHR_MAT       2      1 char      9                     <br /> COL_VEC       6      1 num       8                     <br /> I_MAT         6      6 num       8                     <br /> MAT1          3      2 num       8                     <br /> MAT_2         3      1 num       8                     <br /> NUM_MAT       2      3 num       8                     <br /> ROW_VEC       1      6 num       8                     <br /> SCALAR        1      1 num       8                     <br /> TROW_VEC      6      1 num       8                     <br />  Number of symbols = 10  (includes those without values)<br /></pre><br/></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">nmat_row</th></tr></thead><tbody><tr><td class="r data">2</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">nmat_col</th></tr></thead><tbody><tr><td class="r data">3</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">nmat_dim</th></tr></thead><tbody><tr><td class="r data">2</td><td class="r data">3</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">cmat_len</th></tr></thead><tbody><tr><td class="r data">6</td></tr><tr><td class="r data">9</td></tr></tbody></table></article><article id="IDX5"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">cmat_nlen</th></tr></thead><tbody><tr><td class="r data">9</td></tr></tbody></table></article><article id="IDX6"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">nmat_typ</th></tr></thead><tbody><tr><td class="data">N</td></tr></tbody></table></article><article id="IDX7"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">cmat_typ</th></tr></thead><tbody><tr><td class="data">C</td></tr></tbody></table></article></section></div></center>So to load all variables stored in the workspace, we use line 3. Succeeding lines are not that difficult to understand, and this what I love about SAS, the statements and functions are self-explanatory -- a good excuse for us to proceed with subscripting on matrices, below is the code of it<br/><br/><script src="https://gist.github.com/alstat/9ec1455cb62d691f99ad.js"></script><center><div id="div_c86abb13-bf8d-4735-b91e-f90589cb9998" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">NUM_MAT</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">2</td><td class="r data">3</td></tr><tr><td class="r data">4</td><td class="r data">5</td><td class="r data">6</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">n22_mat</th></tr></thead><tbody><tr><td class="r data">5</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">nr1_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">2</td><td class="r data">3</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="6" scope="colgroup">ir12_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">1</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td><td class="r data">0</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">ic12_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">1</td></tr><tr><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td></tr><tr><td class="r data">0</td><td class="r data">0</td></tr></tbody></table></article><article id="IDX5"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ngm_mat</th></tr></thead><tbody><tr><td class="r data">3.5</td></tr></tbody></table></article><article id="IDX6"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">ncm_mat</th></tr></thead><tbody><tr><td class="r data">2.5</td><td class="r data">3.5</td><td class="r data">4.5</td></tr></tbody></table></article><article id="IDX7"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">nrm_mat</th></tr></thead><tbody><tr><td class="r data">2</td></tr><tr><td class="r data">5</td></tr></tbody></table></article><article id="IDX8"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ngs_mat</th></tr></thead><tbody><tr><td class="r data">21</td></tr></tbody></table></article><article id="IDX9"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">nrs_mat</th></tr></thead><tbody><tr><td class="r data">17</td><td class="r data">29</td><td class="r data">45</td></tr></tbody></table></article><article id="IDX10"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ncs_mat</th></tr></thead><tbody><tr><td class="r data">14</td></tr><tr><td class="r data">77</td></tr></tbody></table></article><article id="IDX11"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">nss_mat</th></tr></thead><tbody><tr><td class="r data">91</td></tr></tbody></table></article><article id="IDX12"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">nrs_mat</th></tr></thead><tbody><tr><td class="r data">17</td><td class="r data">29</td><td class="r data">45</td></tr></tbody></table></article><article id="IDX13"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ncs_mat</th></tr></thead><tbody><tr><td class="r data">14</td></tr><tr><td class="r data">77</td></tr></tbody></table></article></section></div></center>Line 17 computes the grand mean of the matrix by simply inserting <code>:</code> symbol inside the place holder of the subscript. So that if we have <code>num_mat[:, 1]</code>, then mean is computed over the row entries, giving us the column mean, particularly for first column. The same goes for <code>num_mat[1, :]</code>, where it computes the mean over the column entries, giving us the row mean. If we replace the symbol in the place holder of the subscripts to <code>+</code>, then we are interested in the sum of the entries. Further, if we use <code>##</code> symbol, the returned value will be the sum of square of the elements. And reducing this to <code>#</code>, the returned value will be the product of the elements.<br/><br/> Now let's proceed to the next bullet, which is about Descriptive Statistics.<br/><br/><script src="https://gist.github.com/alstat/28c4498a94bc8acd622f.js"></script><center><div id="div_bc574f49-7da4-479e-a6f4-9f85a2bc330a" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="6" scope="colgroup">csr_vec</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">3</td><td class="r data">6</td><td class="r data">10</td><td class="r data">15</td><td class="r data">21</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">csn_mat</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data">3</td><td class="r data">6</td></tr><tr><td class="r data">10</td><td class="r data">15</td><td class="r data">21</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">mnr_vec</th></tr></thead><tbody><tr><td class="r data">1</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">mnn_mat</th></tr></thead><tbody><tr><td class="r data">1</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">mxr_vec</th></tr></thead><tbody><tr><td class="r data">6</td></tr></tbody></table></article><article id="IDX5"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">mxn_mat</th></tr></thead><tbody><tr><td class="r data">6</td></tr></tbody></table></article><article id="IDX6"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">smr_vec</th></tr></thead><tbody><tr><td class="r data">21</td></tr></tbody></table></article><article id="IDX7"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">smn_mat</th></tr></thead><tbody><tr><td class="r data">21</td></tr></tbody></table></article><article id="IDX8"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ssr_vec</th></tr></thead><tbody><tr><td class="r data">91</td></tr></tbody></table></article><article id="IDX9"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">ssn_mat</th></tr></thead><tbody><tr><td class="r data">91</td></tr></tbody></table></article></section></div></center>To generate random numbers from say normal distribution and computing the mean, standard deviation and other statistics, consider the following:<br/><br/><script src="https://gist.github.com/alstat/9466735e59f624f2cf07.js"></script><center><div id="div_b4cc1ec2-9911-43bc-9bae-76b53bf609ab" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x1</th></tr></thead><tbody><tr><td class="r data">0.2642335</td></tr><tr><td class="r data">1.0747269</td></tr><tr><td class="r data">0.8179241</td></tr><tr><td class="r data" style="white-space: nowrap">-0.552775</td></tr><tr><td class="r data">1.5401449</td></tr><tr><td class="r data" style="white-space: nowrap">-1.233822</td></tr><tr><td class="r data" style="white-space: nowrap">-0.141535</td></tr><tr><td class="r data">1.0420036</td></tr><tr><td class="r data">0.0657322</td></tr><tr><td class="r data">1.225259</td></tr><tr><td class="r data" style="white-space: nowrap">-0.148304</td></tr><tr><td class="r data">0.2901233</td></tr><tr><td class="r data" style="white-space: nowrap">-1.149394</td></tr><tr><td class="r data" style="white-space: nowrap">-0.482548</td></tr><tr><td class="r data" style="white-space: nowrap">-0.452974</td></tr><tr><td class="r data">0.2738675</td></tr><tr><td class="r data" style="white-space: nowrap">-0.224133</td></tr><tr><td class="r data">0.218553</td></tr><tr><td class="r data" style="white-space: nowrap">-0.420015</td></tr><tr><td class="r data">0.246356</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x2</th></tr></thead><tbody><tr><td class="r data">54.993687</td></tr><tr><td class="r data">58.167325</td></tr><tr><td class="r data">59.147705</td></tr><tr><td class="r data">40.74794</td></tr><tr><td class="r data">45.813645</td></tr><tr><td class="r data">53.460273</td></tr><tr><td class="r data">57.877839</td></tr><tr><td class="r data">51.98273</td></tr><tr><td class="r data">49.875743</td></tr><tr><td class="r data">52.570553</td></tr><tr><td class="r data">54.097005</td></tr><tr><td class="r data">46.936325</td></tr><tr><td class="r data">57.509082</td></tr><tr><td class="r data">50.463228</td></tr><tr><td class="r data">42.775346</td></tr><tr><td class="r data">39.376643</td></tr><tr><td class="r data">53.303455</td></tr><tr><td class="r data">54.494482</td></tr><tr><td class="r data">55.747821</td></tr><tr><td class="r data">44.512206</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">x12</th></tr></thead><tbody><tr><td class="r data">0.2642335</td><td class="r data">54.993687</td></tr><tr><td class="r data">1.0747269</td><td class="r data">58.167325</td></tr><tr><td class="r data">0.8179241</td><td class="r data">59.147705</td></tr><tr><td class="r data" style="white-space: nowrap">-0.552775</td><td class="r data">40.74794</td></tr><tr><td class="r data">1.5401449</td><td class="r data">45.813645</td></tr><tr><td class="r data" style="white-space: nowrap">-1.233822</td><td class="r data">53.460273</td></tr><tr><td class="r data" style="white-space: nowrap">-0.141535</td><td class="r data">57.877839</td></tr><tr><td class="r data">1.0420036</td><td class="r data">51.98273</td></tr><tr><td class="r data">0.0657322</td><td class="r data">49.875743</td></tr><tr><td class="r data">1.225259</td><td class="r data">52.570553</td></tr><tr><td class="r data" style="white-space: nowrap">-0.148304</td><td class="r data">54.097005</td></tr><tr><td class="r data">0.2901233</td><td class="r data">46.936325</td></tr><tr><td class="r data" style="white-space: nowrap">-1.149394</td><td class="r data">57.509082</td></tr><tr><td class="r data" style="white-space: nowrap">-0.482548</td><td class="r data">50.463228</td></tr><tr><td class="r data" style="white-space: nowrap">-0.452974</td><td class="r data">42.775346</td></tr><tr><td class="r data">0.2738675</td><td class="r data">39.376643</td></tr><tr><td class="r data" style="white-space: nowrap">-0.224133</td><td class="r data">53.303455</td></tr><tr><td class="r data">0.218553</td><td class="r data">54.494482</td></tr><tr><td class="r data" style="white-space: nowrap">-0.420015</td><td class="r data">55.747821</td></tr><tr><td class="r data">0.246356</td><td class="r data">44.512206</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">x12_cor</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data" style="white-space: nowrap">-0.001531</td></tr><tr><td class="r data" style="white-space: nowrap">-0.001531</td><td class="r data">1</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col><col></colgroup><thead><tr><th class="c b header" colspan="2" scope="colgroup">x12_cov</th></tr></thead><tbody><tr><td class="r data">0.5645625</td><td class="r data" style="white-space: nowrap">-0.006864</td></tr><tr><td class="r data" style="white-space: nowrap">-0.006864</td><td class="r data">35.614684</td></tr></tbody></table></article><article id="IDX5"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x1_mu</th></tr></thead><tbody><tr><td class="r data">0.1126712</td></tr></tbody></table></article><article id="IDX6"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x2_std</th></tr></thead><tbody><tr><td class="r data">5.967804</td></tr></tbody></table></article></section></div></center>Line 2 above sets the initial random seed for random numbers to be generated in line 8. Line 5 allocates a matrix of dimension 20 by 1 to <code>x1</code> variable, and that's done by using the <code>j</code> function. The number of rows of <code>x1</code> represents the sample size of the random numbers needed. One can also set <code>x1</code> to a row vector, where in this case, the number of columns represents the sample size needed. The two sets of random sample, <code>x1</code> and <code>x2</code>, generated from the same family of distribution, Gaussian/Normal, are then concatenated column-wise (<code>||</code>) to form a matrix of size 20 by 2 in line 13. Using this new matrix, <code>x12</code>, we can then compute the correlation and covariance of the two columns using <code>corr</code> and <code>cov</code> functions, respectively, which from the above output tells us that there is almost no relation between the two.<br/><br/>SAS can also perform set operations, and it's easy. Consider the following:<br/><br/><script src="https://gist.github.com/alstat/5a3d8e5ee39bc8762858.js"></script><center><div id="div_aac492bc-1421-4b71-a5a2-43c5bffcd20d" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="4" scope="colgroup">B_comp</th></tr></thead><tbody><tr><td class="data">a</td><td class="data">i</td><td class="data">m</td><td class="data">x</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="5" scope="colgroup">A_comp</th></tr></thead><tbody><tr><td class="data">e</td><td class="data">h</td><td class="data">r</td><td class="data">t</td><td class="data">y</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="10" scope="colgroup">AuB</th></tr></thead><tbody><tr><td class="data">a</td><td class="data">e</td><td class="data">h</td><td class="data">i</td><td class="data">m</td><td class="data">o</td><td class="data">r</td><td class="data">t</td><td class="data">x</td><td class="data">y</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">AnB</th></tr></thead><tbody><tr><td class="data">o</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col><col><col><col><col><col><col><col><col><col></colgroup><thead><tr><th class="c b header" colspan="10" scope="colgroup">AB_unq</th></tr></thead><tbody><tr><td class="data">a</td><td class="data">e</td><td class="data">h</td><td class="data">i</td><td class="data">m</td><td class="data">o</td><td class="data">r</td><td class="data">t</td><td class="data">x</td><td class="data">y</td></tr></tbody></table></article></section></div></center>Next bullet is all about Probability Functions and Subroutine. For example, consider an experiment defined by the random variable $X$ which follows an exponential distribution with mean $\beta = .5$. What is the probability of $X$ to be at most 2, $\mathrm{P}(X\leq 2)$? To solve this we use the <code>CDF</code> function, but note that the exponential density in SAS is given by $$f(x|\beta)=\frac{1}{\beta}\exp\left[-\frac{x}{\beta}\right].$$ So to compute the probability, we solve for the following integration, $$ \mathrm{P}(X\leq 2)=\int_{0}^{2}\frac{1}{.5}\exp\left[-\frac{x}{.5}\right]\operatorname{d}x = 0.9816844 $$ To confirm this in SAS, run the following <br/><br/><script src="https://gist.github.com/alstat/fd66e2ddb1a7918de2b7.js"></script><center><div id="div_9eec5826-d049-4fe3-a8eb-5160994efcb6" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">px</th></tr></thead><tbody><tr><td class="r data">0.9816844</td></tr></tbody></table></article></section></div></center>If we take the derivative of the Cumulative Distribution Function (CDF), the returned expression is what we call the Probability Density Function (PDF). And in SAS, we play on this using the <code>PDF</code> function. For example, we can confirm the above probability by integrating the PDF. And to do so, run the following<br/><br/><script src="https://gist.github.com/alstat/79470055c1d76cb1926d.js"></script><center><div id="div_c6bfb9e4-c541-45b4-a50a-e12563253a89" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">px</th></tr></thead><tbody><tr><td class="r data">0.9816844</td></tr></tbody></table></article></section></div></center>To end this topic, consider the inverse of the CDF, which is the quantile. To compute for the quantile of the popular level of significance $\alpha = 0.05$, from a standard normal distribution, which is $z_{\alpha} = -1.645$ for lower tail, run <br/><br/><script src="https://gist.github.com/alstat/f5b4a7a6cc66efe8fa41.js"></script><center><div id="div_95ef86ca-49ff-4cc1-9df2-eb84e99f317d" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">z_a</th></tr></thead><tbody><tr><td class="r data" style="white-space: nowrap">-1.644854</td></tr></tbody></table></article></section></div></center>Next entry is about Linear Algebra, the topic on which this procedure is based upon. Linear algebra is very useful in Statistics, especially in Regression, Nonlinear Regression, and Multivariate Analysis. To perform this in SAS, consider <br/><br/><script src="https://gist.github.com/alstat/335af0c7dd49cf3bd6a5.js"></script><center><div id="div_0dbdf489-6427-4e8f-b189-ef771ec3a453" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">xm_det</th></tr></thead><tbody><tr><td class="r data" style="white-space: nowrap">-1</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">xm_inv</th></tr></thead><tbody><tr><td class="r data">1</td><td class="r data" style="white-space: nowrap">-3</td><td class="r data">2</td></tr><tr><td class="r data" style="white-space: nowrap">-3</td><td class="r data">3</td><td class="r data" style="white-space: nowrap">-1</td></tr><tr><td class="r data">2</td><td class="r data" style="white-space: nowrap">-1</td><td class="r data" style="white-space: nowrap">4.441E-16</td></tr></tbody></table></article><article id="IDX2"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x_evl</th></tr></thead><tbody><tr><td class="r data">11.344814</td></tr><tr><td class="r data">0.1709152</td></tr><tr><td class="r data" style="white-space: nowrap">-0.515729</td></tr></tbody></table></article><article id="IDX3"><table class="table" style="border-spacing: 0"><colgroup><col><col><col></colgroup><thead><tr><th class="c b header" colspan="3" scope="colgroup">x_evc</th></tr></thead><tbody><tr><td class="r data">0.3279853</td><td class="r data">0.591009</td><td class="r data">0.7369762</td></tr><tr><td class="r data">0.591009</td><td class="r data" style="white-space: nowrap">-0.736976</td><td class="r data">0.3279853</td></tr><tr><td class="r data">0.7369762</td><td class="r data">0.3279853</td><td class="r data" style="white-space: nowrap">-0.591009</td></tr></tbody></table></article><article id="IDX4"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x_coef</th></tr></thead><tbody><tr><td class="r data">3</td></tr><tr><td class="r data" style="white-space: nowrap">-4</td></tr><tr><td class="r data">2</td></tr></tbody></table></article></section></div></center>Finally, one of the coolest capabilities of SAS/IML is to Read and Create SAS Data. The following code demos how to read SAS data set.<br/><br/><script src="https://gist.github.com/alstat/42957027513b0b8f7918.js"></script><center><div id="div_6df58228-c26c-4a98-ba2b-4132cfa11cda" class="c body"><section data-name="IML" data-sec-type="proc"><div id="IDX" class="systitleandfootercontainer" style="border-spacing: 1px"></div><article><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">x_dat</th></tr></thead><tbody><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Acura</td></tr><tr><td class="data">Audi</td></tr><tr><td class="data">Audi</td></tr><tr><td class="data">Audi</td></tr></tbody></table></article><article id="IDX1"><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><thead><tr><th class="c b header" scope="col">hp_mean</th></tr></thead><tbody><tr><td class="r data">215.88551</td></tr></tbody></table></article></section></div></center>And to create a SAS data set, run <br/><br/><script src="https://gist.github.com/alstat/b58693b72de397cc3b50.js"></script><center><table class="table" style="border-spacing: 0"><colgroup><col></colgroup><colgroup><col><col><col></colgroup><thead><tr><th class="r header" scope="col">Obs</th><th class="r header" scope="col">COL1</th><th class="r header" scope="col">COL2</th><th class="r header" scope="col">COL3</th></tr></thead><tbody><tr><th class="r rowheader" scope="row">1</th><td class="r data">1</td><td class="r data">2</td><td class="r data">3</td></tr><tr><th class="r rowheader" scope="row">2</th><td class="r data">4</td><td class="r data">5</td><td class="r data">6</td></tr></tbody></table></center>To end this post, I want to say, <i>I am loving SAS because of IML</i>. There are still hidden capabilities of this procedure that I would love to explore and share to my readers, so stay tuned. Another great blog about SAS/IML is <a href="http://blogs.sas.com/content/iml" target = "_blank">The DO Loop</a>, whose author, <a href="http://blogs.sas.com/content/iml/author/rickwicklin" target = "_blank">Dr. Rick Wicklin</a>, is also the principal developer of the said procedure and <a href="http://support.sas.com/rnd/app/studio/index.html" target = "_blank">SAS/IML Studio</a>, do check that out.<br/><br/><h3>Reference</h3><ol><li>SAS/IML Tip Sheet. <i><a href="http://blogs.sas.com/content/iml/files/2011/10/IMLTipSheet.pdf" target = "_blank">Frequently Used SAS/IML Functions and Subroutines</a></i>.</li><li><a href="http://support.sas.com/documentation/cdl/en/imlug/63541/PDF/default/imlug.pdf" target = "_blank">SAS/IML 13.2 User Guide</a>.</li><li><a href="http://blogs.sas.com/content/iml/2011/05/06/how-to-numerically-integrate-a-function-in-sas.html" target = "_blank">Rick Wicklin. The DO Loop. <i>How to numerically integrate a function in SAS</i></a>.</li></ol><style>.header {     background-color: #EDF2F9;     border-color: #B0B7BB;     border-style: solid;     border-width: 0px 1px 1px 0px;     color: #127;     font-family: Arial,"Albany AMT",Helvetica,Helv;     font-size: x-small;     font-style: normal;     font-weight: bold;     padding: 2px 5px 2px 5px; }   .rowheader {     background-color: #EDF2F9;     border-color: #B0B7BB;     border-style: solid;     border-width: 0px 1px 1px 0px;     color: #127;     font-family: Arial,"Albany AMT",Helvetica,Helv;     font-size: x-small;     font-style: normal;     font-weight: bold;     text-align: center;     padding: 2px 5px 2px 5px; }   .data, .dataemphasis {     background-color: #FFF;     border-color: #C1C1C1;     border-style: solid;     border-width: 0px 1px 1px 0px;     font-family: Arial,"Albany AMT",Helvetica,Helv;     font-size: x-small;     font-style: normal;     font-weight: normal;     text-align: right;     padding: 2px 5px 2px 5px; }  .table {     border-color: #C1C1C1;     border-style: solid;     border-width: 1px 1px 1px 1px;     border-collapse: collapse;     border-spacing: 0px;     padding: 5px 5px 5px 5px;     margin-bottom: 1em; }  .body {     color: #000;     font-family: Arial,"Albany AMT",Helvetica,Helv;     font-size: x-small;     font-style: normal;     font-weight: normal;     line-height: 1.231; } </style><div class="author">
  <img src="" style="width: 96px; height: 96;">
  <span style="position: absolute; padding: 32px 15px;">
    <i>Original post by <a href="http://twitter.com/">Alstatr</a> - check out <a href="http://alstatr.blogspot.com/">Analysis with Programming</a></i>
  </span>
</div>
